name: Build images for releases

on:
  workflow_dispatch:

jobs:
  check-versions:
    name: Check Versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [ stable, nightly ]
        include:
          - channel: stable
            version_pattern: '[0-9]+\.[0-9]+\.[0-9]+'
          - channel: nightly
            version_pattern: '[0-9]+\.[0-9]+\.[0-9]+-nightly'

    steps:
    - name: Update rust toolchain
      run: rustup update

    - name: Install ${{ matrix.channel }}
      run: rustup toolchain install ${{ matrix.channel }}

    - name: Retrieve ${{ matrix.channel }} version
      run: |
        {
          echo 'VERSION<<EOF'
          rustup +toolchain check | \
            grep '${{ matrix.channel }}' | \
            grep -E '${{ matrix.version_pattern }}' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"

    - name: Retreive ${{ matrix.channel }} commit
      run: |
        {
          echo 'COMMIT<<EOF'
          rustup +toolchain check | \
            grep '${{ matrix.channel }}' | \
            grep -E '[a-f0-9]{9}' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"

    - name: Checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 0

    - name: Determine version for ${{ matrix.channel }}
      run: |
        if [ ${{ matrix.channel }} = stable ]; then
          echo "TAG=v${VERSION}" >> "$GITHUB_ENV"
        else 
          echo "TAG=v${VERSION}-${COMMIT}" >> "$GITHUB_ENV"
        fi
       
    - name: Check for tag
      id: checkTag
      run: |
        if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
          echo "Version already exists no release needed"
          echo "RELEASE=false" >> "$GITHUB_ENV"
        else
          echo "New version available, starting release for ${TAG}"
          echo "RELEASE=true" >> "$GITHUB_ENV"
        fi

    - name: Export job outputs
      run: |
        echo "TAG=$TAG" >> "$GITHUB_OUTPUT"
        echo "RELEASE=$RELEASE" >> "$GITHUB_OUTPUT"

  release:
    name: Release
    needs: check-version
    if: ${{ needs.check-version.outputs.RELEASE }} == true
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4
