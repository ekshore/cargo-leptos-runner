name: Build images for releases

on:
  workflow_dispatch:

jobs:
  check-versions:
    name: Check Versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [ stable, nightly ]

    steps:
    - name: Update rust toolchain
      run: rustup update
    - name: Install ${{ matrix.channel }}
      run: rustup toolchain install ${{ matrix.channel }}
    - name: Retrieve ${{ matrix.channel }} version
      run: |
        PATTERN=""
        if ${{ matrix.channel }} == "stable"; then
          PATTERN='[0-9]+\.[0-9]+\.[0-9]+'
        else
          PATTERN='[0-9]+\.[0-9]+\.[0-9]+-${{ matrix.channel }}'
        fi
        echo $PATTERN
        {
          echo 'VERSION<<EOF'
          rustup +toolchain check | \
            grep '${{ matrix.channel }}' | \
            grep -E $PATTERN
          echo 'EOF'
        } >> "$GITHUB_ENV"
    - name: Retrieve Stable version
      if: ${{ matrix.channel }} == "stable"
      run: |
        {
          echo 'STABLE_VERSION<<EOF'
          rustup +toolchain check | \
            grep 'stable' | \
            grep -E '[0-9]+\.[0-9]+\.[0-9]+' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"
    - name: Retrieve nightly version
      if: ${{ matrix.channel }} == "nightly"
      run: |
        {
          echo 'NIGHTLY_VERSION<<EOF'
          rustup +toolchain check | \
            grep -E '[0-9]+\.[0-9]+\.[0-9]+-nightly' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"
    - name: Retreive ${{ matrix.channel }} commit
      run: |
        {
          echo 'COMMIT<<EOF'
          rustup +toolchain check | \
            grep 'nightly' | \
            grep -E '[a-f0-9]{9}' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"

    - name: Print versioning info
      run: printf 'Stable Version %s\nNightly version %s [%s]\n' "$STABLE_VERSION" "$NIGHTLY_VERSION" "$NIGHTLY_COMMIT"

    - name: Checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 0

    - name: Start stable release
      run: |
        TAG="v$STABLE_VERSION"
        if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
          echo "Version already exists no release needed"
        else
          echo "New stable version available, starting release for ${TAG}"
        fi

    - name: Start nightly release
      run: |
        TAG="v$NIGHTLY_VERSION-$NIGHTLY_COMMIT"
        if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
          echo "Version already exists no release needed"
        else
          echo "New nightly version available, starting release for ${TAG}"
        fi
