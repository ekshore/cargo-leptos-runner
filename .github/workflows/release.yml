name: Build images for releases

on:
  workflow_dispatch:

jobs:
  check-versions:
    name: Check Versions
    runs-on: ubuntu-latest
    strategy:
      matrix:
        channel: [ stable, nightly ]
        include:
          - channel: stable
            version_pattern: '[0-9]+\.[0-9]+\.[0-9]+'
          - channel: nightly
            version_pattern: '[0-9]+\.[0-9]+\.[0-9]+-nightly'

    steps:
    - name: Update rust toolchain
      run: rustup update

    - name: Install ${{ matrix.channel }}
      run: rustup toolchain install ${{ matrix.channel }}

    - name: Retrieve ${{ matrix.channel }} version
      run: |
        {
          echo 'VERSION<<EOF'
          rustup +toolchain check | \
            grep '${{ matrix.channel }}' | \
            grep -E '${{ matrix.version_pattern }}' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"

    - name: Retreive ${{ matrix.channel }} commit
      run: |
        {
          echo 'COMMIT<<EOF'
          rustup +toolchain check | \
            grep '${{ matrix.channel }}' | \
            grep -E '[a-f0-9]{9}' -o
          echo 'EOF'
        } >> "$GITHUB_ENV"

    - name: Print versioning info
      run: printf 'Version %s [%s]\n' "$VERSION" "$COMMIT"

    - name: Checkout
      uses: actions/checkout@v4
      with:
       fetch-depth: 0

    - name: Start ${{ matrix.channel }} release
      run: |
        if ${{ matrix.channel }} -eq stable; then
          TAG="v${VERSION}"
        else 
          TAG="v${VERSION}-${COMMIT}"
        fi
        if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
          echo "Version already exists no release needed"
        else
          echo "New stable version available, starting release for ${TAG}"
        fi

    - name: Start stable release
      run: |
        TAG="v$STABLE_VERSION"
        if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
          echo "Version already exists no release needed"
        else
          echo "New stable version available, starting release for ${TAG}"
        fi

    - name: Start nightly release
      run: |
        TAG="v$NIGHTLY_VERSION-$NIGHTLY_COMMIT"
        if git show-ref --tags --verify --quiet "refs/tags/${TAG}"; then
          echo "Version already exists no release needed"
        else
          echo "New nightly version available, starting release for ${TAG}"
        fi
